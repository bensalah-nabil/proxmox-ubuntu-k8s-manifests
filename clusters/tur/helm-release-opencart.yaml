---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: helm-release-opencart
  namespace: flux-system
spec:
  chart:
    spec:
      chart: opencart
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: opencart
  interval: 10s
  targetNamespace: opencart
  values:
    affinity: {}
    allowEmptyPassword: true
    args: []
    automountServiceAccountToken: false
    certificates:
      args: []
      command: []
      customCAs: []
      customCertificate:
        certificateLocation: /etc/ssl/certs/ssl-cert-snakeoil.pem
        certificateSecret: ""
        chainLocation: /etc/ssl/certs/mychain.pem
        chainSecret:
          key: ""
          name: ""
        keyLocation: /etc/ssl/private/ssl-cert-snakeoil.key
      extraEnvVars: []
      extraEnvVarsCM: ""
      extraEnvVarsSecret: ""
      image:
        digest: ""
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: docker.io
        repository: bitnami/os-shell
        tag: 12-debian-12-r26
    command: []
    commonAnnotations: {}
    commonLabels: {}
    containerPorts:
      http: 8080
      https: 8443
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      enabled: true
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: null
      seccompProfile:
        type: RuntimeDefault
    customLivenessProbe: {}
    customReadinessProbe: {}
    customStartupProbe: {}
    existingSecret: ""
    externalDatabase:
      database: bitnami_opencart
      existingSecret: ""
      host: ""
      password: ""
      port: 3306
      user: bn_opencart
    extraContainerPorts: []
    extraDeploy: []
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    extraVolumeMounts: []
    extraVolumes: []
    fullnameOverride: ""
    global:
      compatibility:
        openshift:
          adaptSecurityContext: auto
      defaultStorageClass: ""
      imagePullSecrets: []
      imageRegistry: ""
      storageClass: ""
    hostAliases:
    - hostnames:
      - status.localhost
      ip: 127.0.0.1
    image:
      debug: false
      digest: ""
      pullPolicy: IfNotPresent
      pullSecrets: []
      registry: docker.io
      repository: bitnami/opencart
      tag: 4.0.2-3-debian-12-r36
    ingress:
      annotations: {}
      apiVersion: ""
      enabled: true
      extraHosts: []
      extraPaths: []
      extraRules: []
      extraTls: []
      hostname: opencart.service
      ingressClassName: ingress
      path: /
      pathType: ImplementationSpecific
      secrets: []
      tls: false
    initContainers: []
    kubeVersion: ""
    lifecycleHooks: {}
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 120
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    mariadb:
      architecture: standalone
      auth:
        database: bitnami_opencart
        password: ""
        rootPassword: ""
        username: bn_opencart
      enabled: true
      primary:
        persistence:
          accessModes:
          - ReadWriteOnce
          enabled: true
          existingClaim: ""
          hostPath: ""
          size: 8Gi
          storageClass: ""
        resources: {}
        resourcesPreset: micro
    metrics:
      enabled: false
      image:
        digest: ""
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: docker.io
        repository: bitnami/apache-exporter
        tag: 1.0.8-debian-12-r6
      podAnnotations:
        prometheus.io/port: "9117"
        prometheus.io/scrape: "true"
      resources: {}
      resourcesPreset: nano
    nameOverride: ""
    namespaceOverride: ""
    networkPolicy:
      allowExternal: true
      allowExternalEgress: true
      enabled: true
      extraEgress: []
      extraIngress: []
      ingressNSMatchLabels: {}
      ingressNSPodMatchLabels: {}
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    opencartEmail: user@example.com
    opencartEnableHttps: false
    opencartHost: ""
    opencartPassword: ""
    opencartSkipInstall: false
    opencartUsername: user
    pdb:
      create: true
      maxUnavailable: ""
      minAvailable: ""
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      existingClaim: ""
      hostPath: ""
      size: 8Gi
      storageClass: ""
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podLabels: {}
    podSecurityContext:
      enabled: true
      fsGroup: 1001
      fsGroupChangePolicy: Always
      supplementalGroups: []
      sysctls: []
    priorityClassName: ""
    readinessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 30
      path: /administration/
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 3
    replicaCount: 1
    resources: {}
    resourcesPreset: micro
    schedulerName: ""
    service:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        http: ""
        https: ""
      ports:
        http: 80
        https: 443
      sessionAffinity: None
      sessionAffinityConfig: {}
      type: LoadBalancer
    serviceAccount:
      annotations: {}
      automountServiceAccountToken: false
      create: true
      name: ""
    sidecars: []
    smtpHost: ""
    smtpPassword: ""
    smtpPort: ""
    smtpProtocol: ""
    smtpUser: ""
    startupProbe:
      enabled: false
      failureThreshold: 6
      initialDelaySeconds: 120
      path: /administration/
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    tolerations: []
    topologySpreadConstraints: []
    updateStrategy:
      type: RollingUpdate
    volumePermissions:
      enabled: false
      image:
        digest: ""
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: docker.io
        repository: bitnami/os-shell
        tag: 12-debian-12-r26
      resources: {}
      resourcesPreset: nano
