---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: helm-release-minio
  namespace: flux-system
spec:
  chart:
    spec:
      chart: minio
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bitnami
      version: 17.0.21
  interval: 10s
  targetNamespace: minio-system
  values:
    affinity: {}
    apiVersions: []
    args: []
    auth:
      existingSecret: ""
      forceNewKeys: false
      forcePassword: false
      rootPassword: V13I4dT4n9wt
      rootPasswordSecretKey: ""
      rootUser: admin
      rootUserSecretKey: ""
      usePasswordFiles: true
      useSecret: true
    automountServiceAccountToken: false
    autoscaling:
      vpa:
        annotations: {}
        controlledResources: []
        enabled: false
        maxAllowed: {}
        minAllowed: {}
        updatePolicy:
          updateMode: Auto
    clientImage:
      digest: ""
      registry: docker.io
      repository: bitnami/minio-client
      tag: 2025.7.21-debian-12-r2
    clusterDomain: cluster.local
    command: []
    commonAnnotations: {}
    commonLabels: {}
    console:
      affinity: {}
      args: []
      automountServiceAccountToken: false
      autoscaling:
        hpa:
          enabled: false
          maxReplicas: ""
          minReplicas: ""
          targetCPU: ""
          targetMemory: ""
        vpa:
          annotations: {}
          controlledResources: []
          enabled: false
          maxAllowed: {}
          minAllowed: {}
          updatePolicy:
            updateMode: Auto
      command: []
      containerPorts:
        http: 9090
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        enabled: true
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      customLivenessProbe: {}
      customReadinessProbe: {}
      customStartupProbe: {}
      deploymentAnnotations: {}
      enabled: true
      extraContainerPorts: []
      extraEnvVars: []
      extraEnvVarsCM: ""
      extraEnvVarsSecret: ""
      extraVolumeMounts: []
      extraVolumes: []
      hostAliases: []
      image:
        digest: ""
        pullPolicy: IfNotPresent
        pullSecrets: []
        registry: docker.io
        repository: bitnami/minio-object-browser
        tag: 2.0.2-debian-12-r3
      ingress:
        annotations: {}
        apiVersion: ""
        enabled: true
        extraHosts: []
        extraPaths: []
        extraRules: []
        extraTls: []
        hostname: harbor.service.r2b001.site
        ingressClassName: nginx
        path: /
        pathType: ImplementationSpecific
        secrets: []
        selfSigned: false
        tls: false
      initContainers: []
      lifecycleHooks: {}
      livenessProbe:
        enabled: true
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      networkPolicy:
        addExternalClientAccess: true
        allowExternal: true
        allowExternalEgress: true
        enabled: true
        extraEgress: []
        extraIngress: []
        ingressNSMatchLabels: {}
        ingressNSPodMatchLabels: {}
        ingressPodMatchLabels: {}
      nodeAffinityPreset:
        key: ""
        type: ""
        values: []
      nodeSelector: {}
      pdb:
        create: true
        maxUnavailable: ""
        minAvailable: ""
      podAffinityPreset: ""
      podAnnotations: {}
      podAntiAffinityPreset: soft
      podLabels: {}
      podSecurityContext:
        enabled: true
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      priorityClassName: ""
      readinessProbe:
        enabled: true
        failureThreshold: 5
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 5
      replicaCount: 1
      resources: {}
      resourcesPreset: nano
      schedulerName: ""
      service:
        annotations: {}
        clusterIP: ""
        externalTrafficPolicy: Cluster
        extraPorts: []
        loadBalancerIP: ""
        loadBalancerSourceRanges: []
        nodePorts:
          http: ""
        ports:
          http: 9090
        type: ClusterIP
      sidecars: []
      startupProbe:
        enabled: false
        failureThreshold: 60
        initialDelaySeconds: 0
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      terminationGracePeriodSeconds: ""
      tolerations: []
      topologySpreadConstraints: []
      updateStrategy:
        type: RollingUpdate
    containerPorts:
      api: 9000
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      enabled: true
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seLinuxOptions: {}
      seccompProfile:
        type: RuntimeDefault
    customLivenessProbe: {}
    customReadinessProbe: {}
    customStartupProbe: {}
    defaultBuckets: ""
    defaultInitContainers:
      volumePermissions:
        containerSecurityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - CHOWN
            drop:
            - ALL
          enabled: true
          privileged: false
          runAsUser: 0
          seLinuxOptions: {}
          seccompProfile:
            type: RuntimeDefault
        enabled: false
        image:
          digest: ""
          pullPolicy: IfNotPresent
          pullSecrets: []
          registry: docker.io
          repository: bitnami/os-shell
          tag: 12-debian-12-r50
        resources: {}
        resourcesPreset: nano
    extraDeploy: []
    extraEnvVars: []
    extraEnvVarsCM: ""
    extraEnvVarsSecret: ""
    extraVolumeMounts: []
    extraVolumes: []
    fullnameOverride: ""
    global:
      compatibility:
        openshift:
          adaptSecurityContext: auto
      defaultStorageClass: ""
      imagePullSecrets: []
      imageRegistry: ""
      security:
        allowInsecureImages: false
    hostAliases: []
    image:
      debug: false
      digest: ""
      pullPolicy: IfNotPresent
      pullSecrets: []
      registry: docker.io
      repository: bitnami/minio
      tag: 2025.7.23-debian-12-r3
    ingress:
      annotations: {}
      apiVersion: ""
      enabled: false
      extraHosts: []
      extraPaths: []
      extraRules: []
      extraTls: []
      hostname: ""
      ingressClassName: nginx
      path: /
      pathType: ImplementationSpecific
      secrets: []
      selfSigned: false
      tls: false
    initContainers: []
    kubeVersion: ""
    lifecycleHooks: {}
    livenessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 5
    metrics:
      enabled: false
      prometheusAuthType: public
      prometheusRule:
        additionalLabels: {}
        enabled: false
        namespace: ""
        rules: []
      serviceMonitor:
        apiVersion: ""
        enabled: false
        honorLabels: false
        interval: 30s
        jobLabel: ""
        labels: {}
        metricRelabelings: []
        namespace: ""
        paths:
        - /minio/v2/metrics/cluster
        - /minio/v2/metrics/node
        relabelings: []
        scrapeTimeout: ""
        selector: {}
        tlsConfig: {}
    mode: standalone
    nameOverride: ""
    namespaceOverride: ""
    networkPolicy:
      addExternalClientAccess: true
      allowExternal: true
      allowExternalEgress: true
      enabled: true
      extraEgress: []
      extraIngress: []
      ingressNSMatchLabels: {}
      ingressNSPodMatchLabels: {}
      ingressPodMatchLabels: {}
    nodeAffinityPreset:
      key: ""
      type: ""
      values: []
    nodeSelector: {}
    pdb:
      create: true
      maxUnavailable: ""
      minAvailable: ""
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      dataSource: {}
      enabled: true
      existingClaim: ""
      mountPath: /bitnami/minio/data
      selector: {}
      size: 8Gi
      storageClass: longhorn
    podAffinityPreset: ""
    podAnnotations: {}
    podAntiAffinityPreset: soft
    podLabels: {}
    podSecurityContext:
      enabled: true
      fsGroup: 1001
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: []
      sysctls: []
    priorityClassName: ""
    provisioning:
      args: []
      buckets: []
      cleanupAfterFinished:
        enabled: false
        seconds: 600
      command: []
      config: []
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        enabled: true
        privileged: false
        readOnlyRootFilesystem: true
        runAsGroup: 1001
        runAsNonRoot: true
        runAsUser: 1001
        seLinuxOptions: {}
        seccompProfile:
          type: RuntimeDefault
      enabled: false
      extraCommands: []
      extraVolumeMounts: []
      extraVolumes: []
      groups: []
      networkPolicy:
        allowExternalEgress: true
        enabled: true
        extraEgress: []
        extraIngress: []
      nodeSelector: {}
      podAnnotations: {}
      podLabels: {}
      podSecurityContext:
        enabled: true
        fsGroup: 1001
        fsGroupChangePolicy: Always
        supplementalGroups: []
        sysctls: []
      policies: []
      resources: {}
      resourcesPreset: nano
      schedulerName: ""
      sleepTime: 5
      users: []
      usersExistingSecrets: []
    readinessProbe:
      enabled: true
      failureThreshold: 5
      initialDelaySeconds: 5
      periodSeconds: 5
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    resourcesPreset: micro
    runtimeClassName: ""
    schedulerName: ""
    service:
      annotations: {}
      clusterIP: ""
      externalTrafficPolicy: Cluster
      extraPorts: []
      headless:
        annotations: {}
      loadBalancerIP: ""
      loadBalancerSourceRanges: []
      nodePorts:
        api: ""
      ports:
        api: 9000
      type: ClusterIP
    serviceAccount:
      annotations: {}
      automountServiceAccountToken: false
      create: true
      name: ""
    sidecars: []
    startupProbe:
      enabled: false
      failureThreshold: 60
      initialDelaySeconds: 0
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    statefulset:
      drivesPerNode: 1
      podManagementPolicy: Parallel
      replicaCount: 4
      zones: 1
    terminationGracePeriodSeconds: ""
    tls:
      autoGenerated:
        certManager:
          duration: 2160h
          existingIssuer: ""
          existingIssuerKind: ""
          keyAlgorithm: RSA
          keySize: 2048
          renewBefore: 360h
        enabled: true
        engine: helm
      ca: ""
      enabled: false
      existingCASecret: ""
      server:
        cert: ""
        existingSecret: ""
        key: ""
    tolerations: []
    topologySpreadConstraints: []
    updateStrategy:
      type: RollingUpdate
