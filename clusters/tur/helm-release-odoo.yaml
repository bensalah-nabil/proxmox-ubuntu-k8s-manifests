---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: odoo
  namespace: flux-system
spec:
  chart:
    spec:
      chart: odoo
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bitnami
      version: 28.2.4
  interval: 10s
  targetNamespace: odoo-system
  values:
    allowEmptyPassword: false
    autoscaling:
      enabled: false
    containerSecurityContext:
      capabilities:
        drop:
        - ALL
      enabled: true
      runAsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
      seccompProfile:
        type: RuntimeDefault
    extraEnvVars:
    - name: ODOO_INITIALIZATION_TIMEOUT
      value: "600"
    - name: ODOO_DEBUG
      value: "true"
    - name: ODOO_LOAD_DEMO_DATA
      value: "false"
    global:
      defaultStorageClass: longhorn
      imageRegistry: ""
      storageClass: longhorn
    image:
      debug: true
      pullPolicy: IfNotPresent
      repository: bitnami/odoo
      tag: 18.0.20250405-debian-12-r2
    ingress:
      annotations:
        nginx.ingress.kubernetes.io/proxy-read-timeout: "600"
        nginx.ingress.kubernetes.io/proxy-send-timeout: "600"
        nginx.ingress.kubernetes.io/rewrite-target: /
      enabled: true
      hostname: odoo.app
      ingressClassName: nginx
      path: /
      pathType: Prefix
      tls: false
    livenessProbe:
      enabled: true
      failureThreshold: 6
      initialDelaySeconds: 600
      path: /web/health
      periodSeconds: 30
      timeoutSeconds: 5
    metrics:
      enabled: false
      serviceMonitor:
        enabled: false
    networkPolicy:
      enabled: false
    odooDatabaseFilter: .*
    odooEmail: admin@yourdomain.com
    odooPassword: your-secure-password
    odooSkipInstall: false
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      enabled: true
      size: 5Gi
      storageClass: longhorn
    podAntiAffinityPreset: soft
    podSecurityContext:
      enabled: true
      fsGroup: 1001
      runAsNonRoot: true
      runAsUser: 1001
    postgresql:
      architecture: standalone
      auth:
        database: bitnami_odoo
        existingSecret: ""
        password: your-secure-db-password
        username: bn_odoo
      enabled: true
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: bitnami/postgresql
        tag: 17.4.0-debian-12-r17
      podDisruptionBudget:
        enabled: false
      primary:
        livenessProbe:
          initialDelaySeconds: 120
          periodSeconds: 10
        persistence:
          accessModes:
          - ReadWriteOnce
          enabled: true
          size: 5Gi
          storageClass: longhorn
        podAnnotations:
          longhorn.io/allow-inconsistent: "true"
          longhorn.io/disable-revision-counter: "true"
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 500m
            memory: 1Gi
    readinessProbe:
      enabled: true
      failureThreshold: 12
      initialDelaySeconds: 120
      path: /web/health
      periodSeconds: 10
      timeoutSeconds: 5
    resources:
      limits:
        cpu: 2000m
        memory: 4Gi
      requests:
        cpu: 1000m
        memory: 2Gi
    service:
      annotations: {}
      nodePorts:
        http: ""
      port: 80
      type: ClusterIP
    startupProbe:
      enabled: true
      failureThreshold: 30
      initialDelaySeconds: 300
      path: /web/health
      periodSeconds: 10
      timeoutSeconds: 5
    volumePermissions:
      enabled: true
      resources:
        requests:
          cpu: 50m
          memory: 64Mi
