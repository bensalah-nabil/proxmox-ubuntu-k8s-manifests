---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: odoo
  namespace: flux-system
spec:
  chart:
    spec:
      chart: odoo
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: bitnami
      version: 28.2.4
  interval: 10s
  targetNamespace: odoo-system
  values:
    existingSecret: ""
    externalDatabase:
      create: false
      database: odoo_prod
      existingSecret: odoo-secrets
      host: 10.0.1.4
      port: 5432
      user: bn_user
    extraEnvVars:
    - name: ODOO_WORKERS
      value: "6"
    - name: ODOO_MAX_CRON_THREADS
      value: "2"
    - name: ODOO_WORKER_RECYCLE
      value: "500"
    - name: ODOO_LIMIT_TIME_REAL
      value: "300"
    - name: ODOO_LIMIT_TIME_CPU
      value: "240"
    - name: ODOO_LIMIT_MEMORY_SOFT
      value: "3221225472"
    - name: ODOO_LIMIT_MEMORY_HARD
      value: "4294967296"
    - name: ODOO_DB_MAXCONN
      value: "24"
    - name: PGOPTIONS
      value: -c statement_timeout=300000
    global:
      imagePullSecrets:
      - odoo-secrets
      imageRegistry: ""
      security:
        allowInsecureImages: false
      storageClass: longhorn
    image:
      debug: false
      pullPolicy: IfNotPresent
      registry: docker.io
      repository: bitnami/odoo
      tag: 18.0.20250605-debian-12-r0
    ingress:
      annotations: {}
      apiVersion: ""
      enabled: true
      extraHosts: []
      extraPaths: []
      extraRules: []
      extraTls: []
      hostname: odoo.app.r2b001.site
      ingressClassName: nginx
      path: /
      pathType: ImplementationSpecific
      secrets: []
      selfSigned: false
      tls: false
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 300
      periodSeconds: 30
      timeoutSeconds: 10
    loadDemoData: false
    metrics:
      enabled: true
      serviceMonitor:
        enabled: true
        interval: 30s
    odooDatabaseFilter: .*
    odooEmail: user@example.com
    odooPassword: admin
    odooSkipInstall: false
    persistence:
      accessModes:
      - ReadWriteMany
      annotations:
        longhorn.io/replica-count: "3"
      enabled: true
      size: 20Gi
      storageClass: longhorn
    podAntiAffinityPreset: hard
    podDisruptionBudget:
      enabled: true
      minAvailable: 1
    postgresql:
      enabled: false
    readinessProbe:
      failureThreshold: 3
      initialDelaySeconds: 30
      path: /web/health
      periodSeconds: 10
      timeoutSeconds: 5
    replicaCount: 2
    resources:
      limits:
        cpu: "4"
        memory: 6Gi
      requests:
        cpu: "2"
        memory: 4Gi
    smtpHost: ""
    smtpPort: ""
    smtpProtocol: ""
    updateStrategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
